services:
  database:
    container_name: database-${NODE_ENV}
    image: postgres:${POSTGRES_VERSION}
    restart: always
    stop_grace_period: 30s
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DATABASE}"]  # Better PostgreSQL-specific health check
      interval: 10s
      timeout: 30s
      retries: 5
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
    ports:
      - '5432:5432'
    volumes: 
      - database:/var/lib/postgresql/data
  mastra-database:
    container_name: mastra-database-development
    image: postgres:${POSTGRES_VERSION}
    restart: always
    stop_grace_period: 30s
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${MASTRA_POSTGRES_USER} -d ${MASTRA_POSTGRES_DATABASE}"]
      interval: 10s
      timeout: 30s
      retries: 5
    environment:
      - POSTGRES_USER=${MASTRA_POSTGRES_USER}
      - POSTGRES_PASSWORD=${MASTRA_POSTGRES_PASSWORD}
      - POSTGRES_DB=${MASTRA_POSTGRES_DATABASE}
    ports:
      - '5433:5432'  # Different port to avoid conflicts
    volumes: 
      - mastra-database-development:/var/lib/postgresql/data
  redis:
    container_name: redis-${NODE_ENV}
    image: redis:${REDIS_VERSION}
    restart: always
    stop_grace_period: 30s
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]  # Better Redis-specific health check
      interval: 10s
      timeout: 30s
      retries: 5
    ports:
      - '6379:6379'
    command: redis-server --save 20 1
    volumes: 
      - redis:/data

volumes:
  database:
    driver: local
  mastra-database-development:
    driver: local
  redis:
    driver: local
